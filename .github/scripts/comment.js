module.exports = async ({ github, context, header, body }) => {
  // Function to select emoji based on the impact level found in the text
  const getEmoji = (text) => {
    if (text.includes("High")) {
      return ":red_circle:";
    } else if (text.includes("Medium")) {
      return ":yellow_circle:";
    } else if (text.includes("Low")) {
      return ":large_blue_circle:";
    } else if (text.includes("Informational")) {
      return ":information_source:";
    }
    return "";
  };

  // Process the body to add emojis to each relevant line
  const formattedBody = body.split('\n').map((line) => {
    const emoji = getEmoji(line);
    return emoji ? `${emoji} ${line}` : line;
  }).join('\n');

  const markdownComment = `
## :robot: Slither Analysis Report :mag_right:

${header}

${formattedBody}

_This comment was automatically generated by the GitHub Actions workflow._
`;

  // Check if the workflow is triggered by a pull request event
  if (!context.payload.pull_request) {
    console.log("This workflow is not triggered by a pull request. Skipping comment creation/update.");
    return;
  }

  // Fetch all comments on the PR
  const { data: comments } = await github.rest.issues.listComments({
    owner: context.repo.owner,
    repo: context.repo.repo,
    issue_number: context.payload.pull_request.number,
  });

  // Find an existing comment by the bot
  const botComment = comments.find(comment => comment.user.type === 'Bot' && comment.body.startsWith(header));

  // Define the function name based on whether we have an existing comment
  const commentFn = botComment ? 'updateComment' : 'createComment';

  // Post or update the comment
  const response = await github.rest.issues[commentFn]({
    owner: context.repo.owner,
    repo: context.repo.repo,
    ...(botComment ? { comment_id: botComment.id } : { issue_number: context.payload.pull_request.number }),
    body: markdownComment,
  });

  if (response.status === 200) {
    console.log("Slither analysis comment created or updated successfully.");
  } else {
    console.error("Failed to create or update the comment.", response);
  }
};
