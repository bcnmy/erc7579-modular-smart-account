name: Unified CI Workflow

on:
  push:
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-cache-key: ${{ steps.cache-keys.outputs.cache-key }}
      foundry-cache-key: ${{ steps.cache-foundry.outputs.cache-key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Get node cache key
        id: cache-keys
        run: echo "::set-output name=cache-key::$(echo ${{ runner.os }}-node-$(cat yarn.lock | sha256sum | cut -d' ' -f1))"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ steps.cache-keys.outputs.cache-key }}

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install JavaScript Dependencies
        run: yarn install --frozen-lockfile

      - name: Ensure Foundry directory exists
        run: mkdir -p ~/.foundry

      - name: Get Foundry cache key
        id: cache-foundry
        run: echo "::set-output name=cache-key::$(echo ${{ runner.os }}-foundry-$(date +%s))"

      - name: Cache Foundry Toolchain
        uses: actions/cache@v4
        with:
          path: |
            ~/.foundry
          key: ${{ steps.cache-foundry.outputs.cache-key }}

      - name: Install Foundry and dependencies
        if: steps.cache-foundry.outputs.cache-hit != 'true'
        uses: foundry-rs/foundry-toolchain@v1.1.1
        with:
          version: nightly

      - name: Add Foundry to PATH
        run: echo "$HOME/.foundry/bin" >> $GITHUB_PATH

  lint:
    name: Lint sources
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Lint sources
        run: yarn lint:sol

  unit_test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Create a fake .secret file
        run: echo "primary twist rack vendor diagram image used route theme frown either will" > .secret
      - name: Run Forge and Hardhat Tests
        run: yarn build && yarn test

  coverage:
    name: Generate coverage report
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Generate Hardhat & Foundry Coverage Report
        run: yarn coverage:report
      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          files: ./coverage/foundry/lcov.info,./coverage/lcov.info
          flags: foundry,hardhat
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  slither_analysis:
    name: Slither Analysis
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Run Slither
        uses: crytic/slither-action@v0.3.1
        with:
          slither-version: "0.10.0"
          fail-on: "none"
          slither-args: '--filter-paths "contracts/mock|node_modules" --checklist --markdown-root ${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/contracts/'
      - name: Create/update checklist as PR comment
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const script = require('.github/scripts/comment')
            const header = '# Slither report'
            const body: ${{ steps.slither_analysis.outputs.stdout }}
            await script({ github, context, header, body })
